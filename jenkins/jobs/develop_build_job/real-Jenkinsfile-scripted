node {
   jdk = tool name: 'Java 8_152'
   env.JAVA_HOME = "${jdk}"

   catchError {
      stage('Preparation'){
        echo "${jdk}"
        echo "${env.JAVA_HOME}"
        checkout scm
      }

      stage('Build') {
        // Run the maven build inside docker container
        configFileProvider([configFile(fileId: 'byggReleaseConfig', variable: 'MAVEN_SETTINGS')]) {
          def maven = docker.image("maven:3.5-jdk-8")
          maven.pull()
          maven.inside("-v ${jdk}:${jdk}") {
            sh 'mvn --global-settings ${MAVEN_SETTINGS} clean install'
          }
        }
      }
   } 
   stage('Results') {
      //junit '**/target/surefire-reports/TEST-*.xml'
      //jacoco()
      //archive '**/target/*.jar'
      cleanWs()
   }

   def previousResult = currentBuild.previousBuild?.result
   if(currentBuild.currentResult != 'SUCCESS') {
      emailext attachLog: true, recipientProviders: [[$class: 'CulpritsRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: "Build failed in Jenkins: ${JOB_NAME}#${BUILD_NUMBER}", body: "See ${BUILD_URL} for details."
   }
   else if (currentBuild.currentResult == 'SUCCESS' && previousResult && previousResult != currentBuild.currentResult) {
      emailext attachLog: true, recipientProviders: [[$class: 'CulpritsRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: "${JOB_NAME} back to stable", body: "See ${BUILD_URL} for details."
   }
}